//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: vnarpc.proto

package com.synclient.grpc;

@kotlin.jvm.JvmSynthetic
public inline fun portsPair(block: com.synclient.grpc.PortsPairKt.Dsl.() -> kotlin.Unit): com.synclient.grpc.Vnarpc.PortsPair =
  com.synclient.grpc.PortsPairKt.Dsl._create(com.synclient.grpc.Vnarpc.PortsPair.newBuilder()).apply { block() }._build()
public object PortsPairKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.synclient.grpc.Vnarpc.PortsPair.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.synclient.grpc.Vnarpc.PortsPair.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.synclient.grpc.Vnarpc.PortsPair = _builder.build()

    /**
     * <code>int32 firstport = 1;</code>
     */
    public var firstport: kotlin.Int
      @JvmName("getFirstport")
      get() = _builder.getFirstport()
      @JvmName("setFirstport")
      set(value) {
        _builder.setFirstport(value)
      }
    /**
     * <code>int32 firstport = 1;</code>
     */
    public fun clearFirstport() {
      _builder.clearFirstport()
    }

    /**
     * <code>int32 secondport = 2;</code>
     */
    public var secondport: kotlin.Int
      @JvmName("getSecondport")
      get() = _builder.getSecondport()
      @JvmName("setSecondport")
      set(value) {
        _builder.setSecondport(value)
      }
    /**
     * <code>int32 secondport = 2;</code>
     */
    public fun clearSecondport() {
      _builder.clearSecondport()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.synclient.grpc.Vnarpc.PortsPair.copy(block: com.synclient.grpc.PortsPairKt.Dsl.() -> kotlin.Unit): com.synclient.grpc.Vnarpc.PortsPair =
  com.synclient.grpc.PortsPairKt.Dsl._create(this.toBuilder()).apply { block() }._build()
